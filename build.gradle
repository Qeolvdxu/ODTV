plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group 'yourpackage.app'
version '1.0'

repositories {
	mavenCentral()
	maven { url 'https://clojars.org/repo/' }
}

dependencies {
    // Add project dependencies here
    implementation'org.apache.commons:commons-csv:+'

    //ffmpeg
    implementation 'org.bytedeco:ffmpeg:6.0-1.5.9'


    //intellij forms
    implementation group: 'com.intellij', name: 'forms_rt', version: '7.0.3'
    implementation 'com.intellij:forms_rt:7.0.3'
    implementation 'com.intellij:forms_rt:7.0.3'
    implementation("com.intellij:forms_rt:7.0.3")
    // XChart
    implementation 'org.knowm.xchart:xchart:3.8.0'

    // SteelSeries
    implementation 'org.bidib.jbidib.eu.hansolo:SteelSeries:3.9.31.2'
    implementation 'eu.hansolo:SteelSeries:3.9.31.2'
    implementation 'eu.hansolo:tilesfx:17.1.31'

    // Apache Commons CSV
    implementation 'org.apache.commons:commons-csv:1.10.0'

    // OpenCV
    implementation 'opencv:opencv:4.0.0-0'

    // FX
    implementation 'org.openjfx:javafx-controls:21'
    implementation 'org.openjfx:javafx-graphics:21'
    implementation 'org.openjfx:javafx-media:21'
    implementation 'org.openjfx:javafx-web:21'
    implementation 'org.openjfx:javafx-swing:21'

    // Flatlaf
    implementation 'com.formdev:flatlaf:3.2.1'

    // VLCJ
    implementation group: 'uk.co.caprica', name: 'vlcj', version: '4.8.1'
    implementation 'org.jetbrains.intellij.plugins:structure-intellij:3.259'
    implementation 'org.jetbrains.intellij.plugins:structure-intellij:3.259'// Use the latest version available

}

// Define a custom task to run the project
task runProject(type: JavaExec) {
    main = 'yourpackage.app.Main' // Replace 'YourMainClass' with the actual name of your main class
    classpath = sourceSets.main.runtimeClasspath

    // Optionally, set JVM arguments if needed
    // jvmArgs = ['-Xmx512m', '-Dproperty=value']

    // Optionally, set the working directory for the task
    // workingDir = project.projectDir

    // Set command-line arguments if needed
    // args = ['arg1', 'arg2']

    // Set environment variables if needed
    // environment 'KEY', 'VALUE'
}

// Define a task dependency to ensure the 'runProject' task is executed when running 'gradlew runProject'
tasks.run.dependsOn(runProject)

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }
}

tasks.withType(Copy) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

repositories {
    mavenCentral()
}
